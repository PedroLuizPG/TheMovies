{"ast":null,"code":"var _jsxFileName = \"/home/pedro/programa\\xE7\\xE3o/estudo/projetos/primeflix-app/src/pages/Home/home.js\",\n  _s = $RefreshSig$();\nimport \"./home.css\";\nimport { useState, useEffect } from \"react\";\nimport api from \"../../service/api\";\nimport { Link } from \"react-router-dom\";\n\n//api_key=41b87a10fbb8701f5f314796b61a1eeb&language=pt-BR\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [Filmes, setFilmes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    //função para fazer a requisição da api\n    async function loadMovies() {\n      await api.get(\"movie/week\", {\n        params: {\n          api_key: \"41b87a10fbb8701f5f314796b61a1eeb\",\n          language: \"pt-BR\"\n        }\n      }).then(response => {\n        setFilmes(response.data.results.slice(0, 10));\n        setLoading(false);\n      }).catch(console.error(\"Filmes não encontrado!\"));\n      return;\n    }\n    loadMovies();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Carregando filmes ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-filmes\",\n      children: Filmes.map(filme => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {}, filme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"ZYBNbwC2qV2wSl75FrEtNvE+3sE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","api","Link","jsxDEV","_jsxDEV","Home","_s","Filmes","setFilmes","loading","setLoading","loadMovies","get","params","api_key","language","then","response","data","results","slice","catch","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","filme","id","_c","$RefreshReg$"],"sources":["/home/pedro/programação/estudo/projetos/primeflix-app/src/pages/Home/home.js"],"sourcesContent":["import \"./home.css\";\nimport { useState, useEffect } from \"react\";\nimport api from \"../../service/api\";\nimport { Link } from \"react-router-dom\";\n\n//api_key=41b87a10fbb8701f5f314796b61a1eeb&language=pt-BR\n\nfunction Home() {\n  const [Filmes, setFilmes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    //função para fazer a requisição da api\n    async function loadMovies() {\n      await api\n        .get(\"movie/week\", {\n          params: {\n            api_key: \"41b87a10fbb8701f5f314796b61a1eeb\",\n            language: \"pt-BR\",\n            \n          },\n        })\n        .then((response) => {\n          \n          setFilmes(response.data.results.slice(0, 10));\n          setLoading(false);\n        })\n        .catch(console.error(\"Filmes não encontrado!\"));\n      return;\n    }\n    loadMovies()\n  }, []);\n\n  if(loading){\n    return(\n        <div className=\"loading\">\n            <h2>Carregando filmes ...</h2>\n        </div>\n    )\n  }\n  \n  return(\n    <div className=\"container\">\n        <div className=\"list-filmes\">\n            {Filmes.map((filme) => {\n                return(\n                    <article key={filme.id}>\n                        \n                    </article>\n                )\n            })}\n        </div>\n    </div>\n  )\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,eAAeW,UAAUA,CAAA,EAAG;MAC1B,MAAMV,GAAG,CACNW,GAAG,CAAC,YAAY,EAAE;QACjBC,MAAM,EAAE;UACNC,OAAO,EAAE,kCAAkC;UAC3CC,QAAQ,EAAE;QAEZ;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAElBT,SAAS,CAACS,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7CV,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDW,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC,CAAC;MACjD;IACF;IACAZ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGF,OAAO,EAAC;IACT,oBACIL,OAAA;MAAKoB,SAAS,EAAC,SAAS;MAAAC,QAAA,eACpBrB,OAAA;QAAAqB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAEZ;EAEA,oBACEzB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBrB,OAAA;MAAKoB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvBlB,MAAM,CAACuB,GAAG,CAAEC,KAAK,IAAK;QACnB,oBACI3B,OAAA,gBAAc2B,KAAK,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CAAC;MAElB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACvB,EAAA,CA/CQD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAiDb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
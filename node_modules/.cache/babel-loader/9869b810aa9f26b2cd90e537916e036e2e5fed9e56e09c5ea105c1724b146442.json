{"ast":null,"code":"var _jsxFileName = \"/home/pedro/programa\\xE7\\xE3o/estudo/projetos/primeflix-app/src/pages/Home/home.js\",\n  _s = $RefreshSig$();\nimport \"./home.css\";\nimport { useState, useEffect } from \"react\";\nimport api from \"../../service/api\";\nimport { Link } from \"react-router-dom\";\n\n//api_key=41b87a10fbb8701f5f314796b61a1eeb&language=pt-BR\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [Filmes, setFilmes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [busca, setBusca] = useState(\"\");\n  const [category, setCategory] = useState(\"movie\");\n  const tolowercaseBusca = busca.toLowerCase();\n  useEffect(() => {\n    console.log(`Requisitando: /${category}`);\n    //função para fazer a requisição da api\n    async function loadMovies() {\n      await api.get(`${category}/week`, {\n        params: {\n          api_key: \"41b87a10fbb8701f5f314796b61a1eeb\",\n          language: \"pt-BR\",\n          page: 1\n        }\n      }).then(response => {\n        console.log(\"Funcionou\");\n        setFilmes(response.data.results.slice(0, 10));\n        setLoading(false);\n      }).catch(() => {\n        console.error(\"Filmes não encontrado\");\n        return;\n      });\n    }\n    loadMovies();\n  }, [category]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Carregando filmes ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          name: \"search-form\",\n          id: \"search-form\",\n          className: \"search-input\",\n          placeholder: \"Qual filme voc\\xEA procura?\",\n          value: busca,\n          onChange: e => setBusca(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \" Search movies here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-select\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: {\n            category\n          },\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'movie',\n            children: \"Filmes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'tv',\n            children: \"Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-filmes\",\n      children: Filmes.map(filme => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: filme.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original/${filme.poster_path}`,\n            alt: filme.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/filme/${filme.id}`,\n            children: \"Acessar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, filme.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"pIHtE4iWOuekkFDpfLjSxugJTtQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","api","Link","jsxDEV","_jsxDEV","Home","_s","Filmes","setFilmes","loading","setLoading","busca","setBusca","category","setCategory","tolowercaseBusca","toLowerCase","console","log","loadMovies","get","params","api_key","language","page","then","response","data","results","slice","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","id","placeholder","value","onChange","e","target","map","filme","title","src","poster_path","alt","to","_c","$RefreshReg$"],"sources":["/home/pedro/programação/estudo/projetos/primeflix-app/src/pages/Home/home.js"],"sourcesContent":["import \"./home.css\";\nimport { useState, useEffect } from \"react\";\nimport api from \"../../service/api\";\nimport { Link } from \"react-router-dom\";\n\n//api_key=41b87a10fbb8701f5f314796b61a1eeb&language=pt-BR\n\nfunction Home() {\n  const [Filmes, setFilmes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [busca, setBusca] = useState(\"\");\n  const [category, setCategory] = useState(\"movie\");\n\n  const tolowercaseBusca = busca.toLowerCase()\n\n  useEffect(() => {\n    console.log(`Requisitando: /${category}`)\n    //função para fazer a requisição da api\n    async function loadMovies() {\n      await api\n        .get(`${category}/week`, {\n          params: {\n            api_key: \"41b87a10fbb8701f5f314796b61a1eeb\",\n            language: \"pt-BR\",\n            page: 1,\n          },\n        })\n        .then((response) => {\n          console.log(\"Funcionou\");\n          setFilmes(response.data.results.slice(0, 10));\n          setLoading(false);\n        })\n        .catch(() => {\n          console.error(\"Filmes não encontrado\");\n          return;\n        });\n    }\n    loadMovies();\n  }, [category]);\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <h2>Carregando filmes ...</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n        <div className=\"search-wrapper\">\n            <label htmlFor=\"search-form\">\n                <input \n                type=\"search\"\n                name=\"search-form\"\n                id='search-form'\n                className=\"search-input\"\n                placeholder=\"Qual filme você procura?\"\n                value={busca}\n                onChange={(e) => setBusca(e.target.value)}>\n                </input>\n                <span className=\"sr-only\"> Search movies here</span>\n            </label>\n\n            <div className=\"custom-select\">\n                <select value={{category}}\n                onChange={(e) => setCategory(e.target.value)}\n                >\n                    <option value={'movie'}>Filmes</option>\n                    <option value={'tv'}>Series</option>\n                </select>\n            </div>\n        </div>\n      <div className=\"list-filmes\">\n        {Filmes.map((filme) => {\n          return (\n            <article key={filme.id}>\n              <strong>{filme.title}</strong>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${filme.poster_path}`}\n                alt={filme.title}\n              ></img>\n              <Link to={`/filme/${filme.id}`}>Acessar</Link>\n            </article>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
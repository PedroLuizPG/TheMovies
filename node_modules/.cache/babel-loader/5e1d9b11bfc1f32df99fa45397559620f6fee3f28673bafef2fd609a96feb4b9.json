{"ast":null,"code":"var _jsxFileName = \"/home/pedro/programa\\xE7\\xE3o/estudo/projetos/primeflix-app/src/pages/Home/home.js\",\n  _s = $RefreshSig$();\nimport \"./home.css\";\nimport { useState, useEffect } from \"react\";\nimport api from \"../../service/api\";\nimport { Link } from \"react-router-dom\";\n\n//api_key=41b87a10fbb8701f5f314796b61a1eeb&language=pt-BR\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [filmes, setFilmes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [busca, setBusca] = useState(\"\");\n  const [category, setCategory] = useState(\"movie\");\n  const tolowercaseBusca = busca.toLowerCase();\n  const filtroFilmes = filmes.filter(f => {\n    (f.title || f.name).toLowerCase().startsWith(tolowercaseBusca);\n  });\n  useEffect(() => {\n    console.log(`Requisitando: /${category}`);\n    //função para fazer a requisição da api\n    async function loadMovies() {\n      await api.get(`${category}/week`, {\n        params: {\n          api_key: \"41b87a10fbb8701f5f314796b61a1eeb\",\n          language: \"pt-BR\",\n          page: 1\n        }\n      }).then(response => {\n        console.log(response.data);\n        //   setFilmes(response.data.results.slice(0, 10));\n        setLoading(false);\n      }).catch(() => {\n        console.error(\"Filmes não encontrado\");\n        return;\n      });\n    }\n    loadMovies();\n  }, [category]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Carregando filmes ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          name: \"search-form\",\n          id: \"search-form\",\n          className: \"search-input\",\n          placeholder: \"Qual filme voc\\xEA procura?\",\n          value: busca,\n          onChange: e => setBusca(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \" Search movies here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-select\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: {\n            category\n          },\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"movie\",\n            children: \"Filmes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tv\",\n            children: \"Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-filmes\",\n      children: filtroFilmes.map(filme => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: filme.title || filme.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original/${filme.poster_path}`,\n            alt: filme.title || filme.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, filme.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"t48wATKKpdMayidn4CmMVe0fYmU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","api","Link","jsxDEV","_jsxDEV","Home","_s","filmes","setFilmes","loading","setLoading","busca","setBusca","category","setCategory","tolowercaseBusca","toLowerCase","filtroFilmes","filter","f","title","name","startsWith","console","log","loadMovies","get","params","api_key","language","page","then","response","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","value","onChange","e","target","map","filme","src","poster_path","alt","_c","$RefreshReg$"],"sources":["/home/pedro/programação/estudo/projetos/primeflix-app/src/pages/Home/home.js"],"sourcesContent":["import \"./home.css\";\nimport { useState, useEffect } from \"react\";\nimport api from \"../../service/api\";\nimport { Link } from \"react-router-dom\";\n\n//api_key=41b87a10fbb8701f5f314796b61a1eeb&language=pt-BR\n\nfunction Home() {\n  const [filmes, setFilmes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [busca, setBusca] = useState(\"\");\n  const [category, setCategory] = useState(\"movie\");\n\n  const tolowercaseBusca = busca.toLowerCase();\n  const filtroFilmes = filmes.filter((f) => {\n    (f.title || f.name).toLowerCase().startsWith(tolowercaseBusca);\n  });\n\n  useEffect(() => {\n    console.log(`Requisitando: /${category}`);\n    //função para fazer a requisição da api\n    async function loadMovies() {\n      await api\n        .get(`${category}/week`, {\n          params: {\n            api_key: \"41b87a10fbb8701f5f314796b61a1eeb\",\n            language: \"pt-BR\",\n            page: 1,\n          },\n        })\n        .then((response) => {\n          console.log(response.data);\n        //   setFilmes(response.data.results.slice(0, 10));\n          setLoading(false);\n        })\n        .catch(() => {\n          console.error(\"Filmes não encontrado\");\n          return;\n        });\n    }\n    loadMovies();\n  }, [category]);\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <h2>Carregando filmes ...</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"search-wrapper\">\n        <label htmlFor=\"search-form\">\n          <input\n            type=\"search\"\n            name=\"search-form\"\n            id=\"search-form\"\n            className=\"search-input\"\n            placeholder=\"Qual filme você procura?\"\n            value={busca}\n            onChange={(e) => setBusca(e.target.value)}\n          ></input>\n          <span className=\"sr-only\"> Search movies here</span>\n        </label>\n\n        <div className=\"custom-select\">\n          <select\n            value={{ category }}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <option value={\"movie\"}>Filmes</option>\n            <option value={\"tv\"}>Series</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"list-filmes\">\n        {filtroFilmes.map((filme) => {\n          return (\n            <article key={filme.id}>\n              <strong>{filme.title || filme.name}</strong>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${filme.poster_path}`}\n                alt={filme.title || filme.name}\n              ></img>\n              {/* <Link to={`/filme/${filme.id}`}>Acessar</Link> */}\n            </article>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}